/*
* Arduino Door Lock Access Control Project
*                
* by Ahmad Mahrous
* 
* Library: MFRC522, https://github.com/miguelbalboa/rfid
*/

#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal.h>

#define RST_PIN   9
#define SS_PIN    10

byte readCard[4];
char* myTags[100] = {};
char* authCodes[100] = {}; // Array to store authorization codes
int tagsCount = 0;
String tagID = "";
boolean successRead = false;
boolean correctTag = false;

// Create instances
MFRC522 mfrc522(SS_PIN, RST_PIN);
LiquidCrystal lcd(2, 3, 4, 5, 6, 7); // Parameters: (rs, enable, d4, d5, d6, d7)

void setup() {
  // Initiating
  SPI.begin();        // SPI bus
  mfrc522.PCD_Init(); //  MFRC522
  lcd.begin(16, 2);   // LCD screen

  // Prints the initial message
  printNormalModeMessage();
}

void loop() {
  // If a new card is present...
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  tagID = "";
  // The MIFARE PICCs that we use have 4 byte UID
  for (uint8_t i = 0; i < 4; i++) {
    readCard[i] = mfrc522.uid.uidByte[i];
    tagID.concat(String(mfrc522.uid.uidByte[i], HEX)); // Adds the 4 bytes in a single String variable
  }
  tagID.toUpperCase();
  mfrc522.PICC_HaltA(); // Stop reading

  correctTag = false;
  // Checks whether the scanned tag is authorized
  for (int i = 0; i < 100; i++) {
    if (tagID == myTags[i]) {
      if (authCodes[i] == NULL || strlen(authCodes[i]) == 0) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Card not config");
        lcd.setCursor(0, 1);
        lcd.print("Contact IT");
        printNormalModeMessage();
        return;
      }
      
      int authLevel = getAuthLevel(authCodes[i]);
      if (authLevel >= 3) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Access Granted!");
        printNormalModeMessage();
        correctTag = true;
      } else {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Level 3 needed");
        printNormalModeMessage();
        correctTag = true;
      }
    }
  }
  if (correctTag == false) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Access Denied!");
    printNormalModeMessage();
  }
}

uint8_t getID() {
  // Getting ready for Reading PICCs
  if (!mfrc522.PICC_IsNewCardPresent()) { // If a new PICC placed to RFID reader continue
    return 0;
  }
  if (!mfrc522.PICC_ReadCardSerial()) { // Since a PICC placed get Serial and continue
    return 0;
  }
  tagID = "";
  for (uint8_t i = 0; i < 4; i++) { // The MIFARE PICCs that we use have 4 byte UID
    readCard[i] = mfrc522.uid.uidByte[i];
    tagID.concat(String(mfrc522.uid.uidByte[i], HEX)); // Adds the 4 bytes in a single String variable
  }
  tagID.toUpperCase();
  mfrc522.PICC_HaltA(); // Stop reading
  return 1;
}

int getAuthLevel(char* authCode) {
  String authStr = String(authCode);
  if (authStr.startsWith("AUTH-LEVEL_")) {
    return authStr.substring(11).toInt();
  }
  return 0;
}

void printNormalModeMessage() {
  delay(1500);
  lcd.clear();
  lcd.print("-Access Control-");
  lcd.setCursor(0, 1);
  lcd.print(" Scan Your Tag!");
}
